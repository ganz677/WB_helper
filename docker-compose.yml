services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: wb
      POSTGRES_PASSWORD: wb
      POSTGRES_DB: wb
    ports:
      - "5432:5432" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wb -d wb"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  beat:
    image: python:3.12-slim
    working_dir: /app
    env_file:
      - .env
    volumes:
      - ..:/app:cached
      - uv_cache:/root/.cache/uv
      - venv_beat:/app/.venv
    command: >
      bash -lc 'set -euo pipefail
      python -m pip install -U pip uv &&
      uv sync --no-dev &&
      . .venv/bin/activate &&
      celery -A wb_autoanswers.platform.mq.celery_app.celery beat --loglevel=INFO'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  otel-collector:
    image: otel/opentelemetry-collector:0.104.0
    volumes:
      - ./otel-collector.yaml:/etc/otelcol/config.yaml:ro
    command: ["--config=/etc/otelcol/config.yaml"]

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  uv_cache:
  venv_beat:
  grafana_data:
